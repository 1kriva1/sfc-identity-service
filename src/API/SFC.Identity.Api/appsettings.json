{
  "ConnectionStrings": {
    "Database": "Server=(localdb)\\MSSQLLocalDB;Database=Identity;Trusted_Connection=True;",
    "RabbitMq": "rabbitmq://127.0.0.1:5672"
  },
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft.AspNetCore": "Warning"
    }
  },
  "AllowedHosts": "*",
  "Kestrel": {
    "EndpointDefaults": {
      "Protocols": "Http2"
    },
    "Endpoints": {
      "WebApi": {
        "Url": "https://localhost:7266",
        "Protocols": "Http1AndHttp2"
      },
      "Internal": {
        "Url": "https://localhost:5266",
        "Protocols": "Http2"
      }
    }
  },
  "Identity": {
    // for local grpc api
    "Authentication": {
      "Authority": "https://localhost:7266",
      "Audience": "sfc.identity",
      "RequireClaims": {
        "scope": [ "sfc.identity.full" ]
      }
    },
    "Clients": [
      {
        "Id": "sfc",
        "Name": "Street Football Club",
        "Secrets": [ "secret_sfc" ],
        "IsTokenExchange": false,
        "AllowOfflineAccess": true,
        "UpdateAccessTokenClaimsOnRefresh": true,
        "RedirectUris": [ "https://localhost:4200/signin-oidc" ],
        "PostLogoutRedirectUris": [ "https://localhost:4200/signout-callback-oidc" ],
        "Scopes": [ "openid", "profile", "test_scope" ],
        "AccessTokenLifetime": 3600,
        "IdentityTokenLifetime": 300,
        "AbsoluteRefreshTokenLifetime": 2592000,
        "SlidingRefreshTokenLifetime": 1296000
      },
      {
        "Id": "sfc.data",
        "Name": "SFC Data API Exchange Token Client",
        "Secrets": [ "secret_sfc_data" ],
        "IsTokenExchange": true,
        "Scopes": [ "sfc.data.full" ]
      },
      {
        "Id": "sfc.player",
        "Name": "SFC Player API Exchange Token Client",
        "Secrets": [ "secret_sfc_player" ],
        "IsTokenExchange": true,
        "Scopes": [ "sfc.player.full" ]
      },
      {
        "Id": "sfc.team",
        "Name": "SFC Team API Exchange Token Client",
        "Secrets": [ "secret_sfc_team" ],
        "IsTokenExchange": true,
        "Scopes": [ "sfc.team.full" ]
      },
      {
        "Id": "sfc.invite",
        "Name": "SFC Invite API Exchange Token Client",
        "Secrets": [ "secret_sfc_invite" ],
        "IsTokenExchange": true,
        "Scopes": [ "sfc.invite.full" ]
      },
      {
        "Id": "sfc.request",
        "Name": "SFC Request API Exchange Token Client",
        "Secrets": [ "secret_sfc_request" ],
        "IsTokenExchange": true,
        "Scopes": [ "sfc.request.full" ]
      },
      {
        "Id": "sfc.scheme",
        "Name": "SFC Scheme API Exchange Token Client",
        "Secrets": [ "secret_sfc_scheme" ],
        "IsTokenExchange": true,
        "Scopes": [ "sfc.scheme.full" ]
      },
      {
        "Id": "sfc.identity",
        "Name": "SFC Identity API Token Client",
        "Secrets": [ "secret_sfc_identity" ],
        "IsTokenExchange": true,
        "Scopes": [ "sfc.identity.full" ]
      }
    ],
    "Api": {
      "Resources": [
        {
          "Name": "sfc.data",
          "DisplayName": "SFC Data API",
          "Scopes": [ "sfc.data.full" ],
          "UserClaims": []
        },
        {
          "Name": "sfc.player",
          "DisplayName": "SFC Player API",
          "Scopes": [ "sfc.player.full" ],
          "UserClaims": []
        },
        {
          "Name": "sfc.team",
          "DisplayName": "SFC Team API",
          "Scopes": [ "sfc.team.full" ],
          "UserClaims": []
        },
        {
          "Name": "sfc.invite",
          "DisplayName": "SFC Invite API",
          "Scopes": [ "sfc.invite.full" ],
          "UserClaims": []
        },
        {
          "Name": "sfc.request",
          "DisplayName": "SFC Request API",
          "Scopes": [ "sfc.request.full" ],
          "UserClaims": []
        },
        {
          "Name": "sfc.scheme",
          "DisplayName": "SFC Scheme API",
          "Scopes": [ "sfc.scheme.full" ],
          "UserClaims": []
        },
        {
          "Name": "sfc.identity",
          "DisplayName": "SFC Identity API",
          "Scopes": [ "sfc.identity.full" ],
          "UserClaims": []
        }
      ],
      "Scopes": [
        {
          "Name": "sfc.data.full",
          "DisplayName": "SFC Data API - Full access"
        },
        {
          "Name": "sfc.player.full",
          "DisplayName": "SFC Player API - Full access"
        },
        {
          "Name": "sfc.team.full",
          "DisplayName": "SFC Team API - Full access"
        },
        {
          "Name": "sfc.invite.full",
          "DisplayName": "SFC Invite API - Full access"
        },
        {
          "Name": "sfc.request.full",
          "DisplayName": "SFC Request API - Full access"
        },
        {
          "Name": "sfc.scheme.full",
          "DisplayName": "SFC Scheme API - Full access"
        },
        {
          "Name": "sfc.identity.full",
          "DisplayName": "SFC Identity API - Full access"
        },
        {
          "Name": "test_scope",
          "DisplayName": "Just for test purpose."
        }
      ]
    },
    "Login": {
      "AllowRememberLogin": true,
      "RememberLoginDuration": 1800
    },
    "Logout": {
      "ShowLogoutPrompt": false,
      "AutomaticRedirectAfterSignOut": true
    }
  },
  "RabbitMq": {
    "Username": "guest",
    "Password": "guest",
    "Name": "SFC.Identity",
    "Retry": {
      "Limit": 5,
      "Intervals": [ 1, 5, 10 ]
    },
    "Exchanges": {
      "Identity": {
        "Key": "identity",
        "Value": {
          "Domain": {
            "User": {
              "Events": {
                "Created": {
                  "Name": "sfc.identity.user.created",
                  "Type": "fanout"
                }
              },
              "Seed": {
                "Seeded": {
                  "Name": "sfc.identity.users.seeded",
                  "Type": "fanout"
                },
                "Seed": {
                  "Name": "sfc.identity.users.seed",
                  "Type": "direct"
                },
                "RequireSeed": {
                  "Name": "sfc.identity.users.seed.require"
                }
              }
            }
          }
        }
      }
    }
  },
  "Grpc": {
    "MaxReceiveMessageSizeInMb": 2,
    "MaxSendMessageSizeInMb": 4
  }
}
